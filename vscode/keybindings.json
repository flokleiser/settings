[
    {
        "key": "cmd+[IntlBackslash]",
        "command": "terminal.focus",
    },
    {
        "key": "cmd+up",
        "command": "editorScroll",
        "args": {
            "to": "up",
            "by": "halfPage",
            "revealCursor": true,
            "value": 1
        },
        "when": "editorTextFocus"
    },
    {   
        "key": "cmd+down",
        "command": "editorScroll",
        "args": {
            "to": "down",
            "by": "halfPage",
            "revealCursor": true,
            "value": 2
        },
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+down",
        "command": "-editor.action.goToBottomHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+up",
        "command": "-editor.action.goToTopHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "shift+cmd+v",
        "command": "-notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+n",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "shift+cmd+left",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "cmd+1",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "cmd+2",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "alt+tab",
        "command": "workbench.action.quickOpenNavigateNextInEditorPicker",
        "when": "inEditorsPicker && inQuickOpen"
    },
    {
        "key": "alt+tab",
        "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
        "when": "!activeEditorGroupEmpty"
    },
    {
        "key": "shift+cmd+0",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "shift+cmd+1",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "cmd+[IntlBackslash]",
        "command": "workbench.action.focusFirstEditorGroup",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "shift+cmd+t",
        "command": "workbench.action.terminal.new"
    },
    {
        "key": "shift+cmd+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },

    // { "key": "[Semicolon]",           "command": "type", "args": { "text": "[" }, "when": "editorTextFocus" },
    // { "key": "[Quote]",               "command": "type", "args": { "text": "]" }, "when": "editorTextFocus" },
    // { "key": "Shift+[Semicolon]",     "command": "type", "args": { "text": "{" }, "when": "editorTextFocus" },
    // { "key": "Shift+[Quote]",         "command": "type", "args": { "text": "}" }, "when": "editorTextFocus" },
    // { "key": "Alt+[Semicolon]",       "command": "type", "args": { "text": "ö" }, "when": "editorTextFocus" },
    // { "key": "Alt+[Quote]",           "command": "type", "args": { "text": "ä" }, "when": "editorTextFocus" },
    // { "key": "Shift+Alt+[Semicolon]", "command": "type", "args": { "text": "Ö" }, "when": "editorTextFocus" },
    // { "key": "Shift+Alt+[Quote]",     "command": "type", "args": { "text": "Ä" }, "when": "editorTextFocus" },
   
    {
        "key": "shift+cmd+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "shift+cmd+m",
        "command": "workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "ctrl+shift+g",
        "command": "-workbench.view.scm",
        "when": "workbench.scm.active"
    },
    {
        "key": "shift+cmd+right",
        "command": "-cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+right",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
    },
    {
        "key": "shift+cmd+left",
        "command": "-cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+left",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellType == 'pwsh'"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "shift+cmd+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+cmd+r",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "shift+cmd+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "shift+cmd+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+c",
        "command": "-extension.vim_cmd+c",
        "when": "editorTextFocus && vim.active && vim.overrideCopy && vim.use<D-c> && !inDebugRepl"
    },
    {
        "key": "shift+cmd+backspace",
        "command": "-search.searchEditor.action.deleteFileResults",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+cmd+backspace",
        "command": "workbench.action.terminal.kill"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "shift+cmd+right",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "shift+cmd+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "cmd+numpad0",
        "command": "-workbench.action.zoomReset"
    },
    {
        "key": "cmd+numpad_add",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "cmd+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "shift+cmd+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "cmd+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "cmd+9",
        "command": "editor.action.fontZoomIn"
    },
    {
        "key": "cmd+0",
        "command": "editor.action.fontZoomReset"
    },
    {
        "key": "cmd+8",
        "command": "editor.action.fontZoomOut"
    },
    {
        "key": "ctrl+cmd+j",
        "command": "editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "shift+cmd+c",
        "command": "workbench.panel.chatSidebar"
    },
    {
        "key": "ctrl+cmd+p",
        "command": "workbench.panel.markers.view.focus"
    },
    {
        "key": "cmd+k b",
        "command": "platformio-ide.build",
        "when": "pioProjectReady && pioProjectTasksReady"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-platformio-ide.build",
        "when": "pioProjectReady && pioProjectTasksReady"
    },
    {
        "key": "cmd+k u",
        "command": "platformio-ide.upload",
        "when": "pioProjectReady && pioProjectTasksReady"
    },
    {
        "key": "ctrl+alt+u",
        "command": "-platformio-ide.upload",
        "when": "pioProjectReady && pioProjectTasksReady"
    },
    {
        "key": "cmd+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "cmd+k s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "cmd+k s",
        "command": "platformio-ide.serialMonitor",
        "when": "pioProjectReady"
    },
    {
        "key": "ctrl+alt+s",
        "command": "-platformio-ide.serialMonitor",
        "when": "pioProjectReady"
    },
    {
        "key": "cmd+[Minus]",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "cmd+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    }
]  